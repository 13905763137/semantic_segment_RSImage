# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWin.ui'
#
# Created by: PyQt5 UI code generator 5.5.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(515, 406)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 515, 19))
        self.menubar.setDefaultUp(True)
        self.menubar.setNativeMenuBar(False)
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuPrepocess = QtWidgets.QMenu(self.menubar)
        self.menuPrepocess.setObjectName("menuPrepocess")
        self.menuTrain = QtWidgets.QMenu(self.menubar)
        self.menuTrain.setObjectName("menuTrain")
        self.menuClassify = QtWidgets.QMenu(self.menubar)
        self.menuClassify.setObjectName("menuClassify")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuSampleProduce = QtWidgets.QMenu(self.menubar)
        self.menuSampleProduce.setObjectName("menuSampleProduce")
        self.menuPostproc = QtWidgets.QMenu(self.menubar)
        self.menuPostproc.setObjectName("menuPostproc")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionLabel_check = QtWidgets.QAction(MainWindow)
        self.actionLabel_check.setObjectName("actionLabel_check")
        self.actionImage_strech = QtWidgets.QAction(MainWindow)
        self.actionImage_strech.setObjectName("actionImage_strech")
        self.actionSampleGenCommon = QtWidgets.QAction(MainWindow)
        self.actionSampleGenCommon.setObjectName("actionSampleGenCommon")
        self.actionCombineSingleModelReults = QtWidgets.QAction(MainWindow)
        self.actionCombineSingleModelReults.setObjectName("actionCombineSingleModelReults")
        self.actionVoteMultiModelResults = QtWidgets.QAction(MainWindow)
        self.actionVoteMultiModelResults.setObjectName("actionVoteMultiModelResults")
        self.actionAccuracyEvaluation = QtWidgets.QAction(MainWindow)
        self.actionAccuracyEvaluation.setObjectName("actionAccuracyEvaluation")
        self.actionSampleGenByCV2 = QtWidgets.QAction(MainWindow)
        self.actionSampleGenByCV2.setObjectName("actionSampleGenByCV2")
        self.actionImage_Clip = QtWidgets.QAction(MainWindow)
        self.actionImage_Clip.setObjectName("actionImage_Clip")
        self.actionMismatch_Analyze = QtWidgets.QAction(MainWindow)
        self.actionMismatch_Analyze.setObjectName("actionMismatch_Analyze")
        self.actionTrain_Binary_Jaccard = QtWidgets.QAction(MainWindow)
        self.actionTrain_Binary_Jaccard.setObjectName("actionTrain_Binary_Jaccard")
        self.actionTrain_Binary_JaccCross = QtWidgets.QAction(MainWindow)
        self.actionTrain_Binary_JaccCross.setObjectName("actionTrain_Binary_JaccCross")
        self.actionTrain_Binary_Cross_entropy = QtWidgets.QAction(MainWindow)
        self.actionTrain_Binary_Cross_entropy.setObjectName("actionTrain_Binary_Cross_entropy")
        self.actionTrain_Multiclass = QtWidgets.QAction(MainWindow)
        self.actionTrain_Multiclass.setObjectName("actionTrain_Multiclass")
        self.actionTrain_Binary_Onehot_Cross = QtWidgets.QAction(MainWindow)
        self.actionTrain_Binary_Onehot_Cross.setObjectName("actionTrain_Binary_Onehot_Cross")
        self.actionPredict_Binary_Jaccard = QtWidgets.QAction(MainWindow)
        self.actionPredict_Binary_Jaccard.setObjectName("actionPredict_Binary_Jaccard")
        self.actionPredict_Binary_JaccCross = QtWidgets.QAction(MainWindow)
        self.actionPredict_Binary_JaccCross.setObjectName("actionPredict_Binary_JaccCross")
        self.actionTrain_Binary_Cross_entropy_2 = QtWidgets.QAction(MainWindow)
        self.actionTrain_Binary_Cross_entropy_2.setObjectName("actionTrain_Binary_Cross_entropy_2")
        self.actionTrain_Binary_Onehot_Cross_2 = QtWidgets.QAction(MainWindow)
        self.actionTrain_Binary_Onehot_Cross_2.setObjectName("actionTrain_Binary_Onehot_Cross_2")
        self.actionPredict_Multiclass = QtWidgets.QAction(MainWindow)
        self.actionPredict_Multiclass.setObjectName("actionPredict_Multiclass")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionExit)
        self.menuPrepocess.addAction(self.actionLabel_check)
        self.menuPrepocess.addAction(self.actionImage_strech)
        self.menuPrepocess.addAction(self.actionImage_Clip)
        self.menuTrain.addAction(self.actionTrain_Binary_Jaccard)
        self.menuTrain.addAction(self.actionTrain_Binary_JaccCross)
        self.menuTrain.addAction(self.actionTrain_Binary_Cross_entropy)
        self.menuTrain.addAction(self.actionTrain_Binary_Onehot_Cross)
        self.menuTrain.addAction(self.actionTrain_Multiclass)
        self.menuClassify.addAction(self.actionPredict_Binary_Jaccard)
        self.menuClassify.addAction(self.actionPredict_Binary_JaccCross)
        self.menuClassify.addAction(self.actionTrain_Binary_Cross_entropy_2)
        self.menuClassify.addAction(self.actionTrain_Binary_Onehot_Cross_2)
        self.menuClassify.addAction(self.actionPredict_Multiclass)
        self.menuHelp.addAction(self.actionAbout)
        self.menuSampleProduce.addAction(self.actionSampleGenCommon)
        self.menuSampleProduce.addAction(self.actionSampleGenByCV2)
        self.menuPostproc.addAction(self.actionCombineSingleModelReults)
        self.menuPostproc.addAction(self.actionVoteMultiModelResults)
        self.menuPostproc.addAction(self.actionAccuracyEvaluation)
        self.menuPostproc.addAction(self.actionMismatch_Analyze)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuPrepocess.menuAction())
        self.menubar.addAction(self.menuSampleProduce.menuAction())
        self.menubar.addAction(self.menuTrain.menuAction())
        self.menubar.addAction(self.menuClassify.menuAction())
        self.menubar.addAction(self.menuPostproc.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.actionLabel_check.triggered.connect(MainWindow.for_action_label_check)
        self.actionImage_strech.triggered.connect(MainWindow.for_action_image_stretch)
        self.actionImage_Clip.triggered.connect(MainWindow.slot_actiong_image_clip)
        self.actionSampleGenCommon.triggered.connect(MainWindow.slot_action_sampleGenCommon)
        self.actionTrain_Binary_JaccCross.triggered.connect(MainWindow.slot_action_trainBinaryJaccCross)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuPrepocess.setTitle(_translate("MainWindow", "Preproc"))
        self.menuTrain.setTitle(_translate("MainWindow", "Train"))
        self.menuClassify.setTitle(_translate("MainWindow", "Classify"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuSampleProduce.setTitle(_translate("MainWindow", "SampleProduce"))
        self.menuPostproc.setTitle(_translate("MainWindow", "Postproc"))
        self.actionLabel_check.setText(_translate("MainWindow", "Label Check"))
        self.actionImage_strech.setText(_translate("MainWindow", "Image Stretch"))
        self.actionSampleGenCommon.setText(_translate("MainWindow", "Sample Generate"))
        self.actionCombineSingleModelReults.setText(_translate("MainWindow", "Combine SingleModelReults"))
        self.actionVoteMultiModelResults.setText(_translate("MainWindow", "Vote MultiModelResults"))
        self.actionAccuracyEvaluation.setText(_translate("MainWindow", "Accuracy Evaluate"))
        self.actionSampleGenByCV2.setText(_translate("MainWindow", "SampleGenByCV2"))
        self.actionImage_Clip.setText(_translate("MainWindow", "Image Clip"))
        self.actionMismatch_Analyze.setText(_translate("MainWindow", "Mismatch Analyze"))
        self.actionTrain_Binary_Jaccard.setText(_translate("MainWindow", "Train Binary Jaccard"))
        self.actionTrain_Binary_JaccCross.setText(_translate("MainWindow", "Train Binary JaccCross"))
        self.actionTrain_Binary_Cross_entropy.setText(_translate("MainWindow", "Train Binary Cross-entropy"))
        self.actionTrain_Multiclass.setText(_translate("MainWindow", "Train Multiclass"))
        self.actionTrain_Binary_Onehot_Cross.setText(_translate("MainWindow", "Train Binary Onehot Cross"))
        self.actionPredict_Binary_Jaccard.setText(_translate("MainWindow", "Predict Binary Jaccard"))
        self.actionPredict_Binary_JaccCross.setText(_translate("MainWindow", "Predict Binary JaccCross"))
        self.actionTrain_Binary_Cross_entropy_2.setText(_translate("MainWindow", "Predict Binary Cross-entropy"))
        self.actionTrain_Binary_Onehot_Cross_2.setText(_translate("MainWindow", "Predict Binary Onehot Cross"))
        self.actionPredict_Multiclass.setText(_translate("MainWindow", "Predict Multiclass"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionOpen.setText(_translate("MainWindow", "Open Raster"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))

